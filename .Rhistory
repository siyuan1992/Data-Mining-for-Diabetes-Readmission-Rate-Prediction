a$scores
sumaary(a)
summary(a)
plot(a,type='lines')
data <- read.csv("~/Documents/2015Fall/EE660/EE660_Project/diabetic_data.csv",
stringsAsFactors=T,na.strings = '?')
data <- data[,c(-6,-11)]
data$medical_specialty <- factor(data$medical_specialty,
levels=c(levels(data$medical_specialty),'Missing'))
data[,10][is.na(data$medical_specialty)] <- 'Missing'
data <- na.omit(data)
data <- data[order(data[,2]),]
unique_list <- array(TRUE,nrow(data))
for (l in 2:nrow(data)){
if (data[l,'patient_nbr']==data[l-1,'patient_nbr']){
unique_list[l]=FALSE
}
}
data <- subset(data,unique_list)
data <- data[,c(-1,-2)]
label <- data$readmitted
data <- data[,-46]
set.seed
set.seed(12345)
inTrain <- createDataPartition(label,p=0.8,list=FALSE)
training <- data[inTrain,]
training_label <- label[inTrain]
test <- data[-inTrain,]
test_label <- label[-inTrain]
plot(princomp(training),type='lines')
View(training)
princomp(training)
principal(training)
install.packages("psych")
library(psych)
principal(training)
NZV <- nearZeroVar(training,saveMetrics = T,freqCut=99/1)
training <- training[,-which(NZV$nzv==TRUE)]
test <- test[,-which(NZV$nzv==TRUE)]
source('~/Documents/2015Fall/EE660/EE660_Project/C2N.R')
data <- rbind(training,test)
for (i in c(1:6,8,15:17,19:30)){
temp <- as.factor(data[,i])
data <- cbind(data,C2N(temp))
}
data <- data[,-c(1:6,8,15:17,19:30)]
training <- data[1:length(training_label),]
test <- data[(length(training_label)+1):68630,]
NZV_2 <- nearZeroVar(training,saveMetrics = T,freqCut=99/1)
training <- training[,-which(NZV_2$nzv==TRUE)]
test<- test[,-which(NZV_2$nzv==TRUE)]
training <- apply(training,2,as.numeric)
test <- apply(test,2,as.numeric)
rm(training_std)
rm(test_std)
save.image("~/Documents/2015Fall/EE660/EE660_Project/Project_v2.RData")
plot(princomp(training),type='lines')
install.packages("FactoMineR")
library(FactoMineR)
PCA(training)
plot(princomp(training),type='lines)
plot(princomp(training),type='lines')
plot(princomp(training,cor=TRUE),type='lines')
plot(princomp(training))
plot(log10(princomp(training)))
?princomp
?prcomp
fit <- prcomp(training,scale=TRUE)
rm(a)
fit$x
fit <- prcomp(training,center=TRUE,scale=TRUE)
fit$sdev
?retx
summary(fit$x)
dim(traininf)
dim(training)
rm(fit)
PCA_fit <- prcomp(training,center=TRUE,scale=TRUE)
training_std <- fit$x[,1:10]
training_std <- PCA_fit$x[,1:10]
View(training_std)
test_std <- predict(PCA_fit,test)[,1:10]
write.csv(cbind(training_std,training_label),'training.csv',row.names = FALSE)
write.csv(cbind(test_std,test_label),'test.csv',row.names = FALSE)
plot(training[,1],training[,2],type='scatter')
plot(training[,1],training[,2])
plot(training[,1],training[,3])
View(training_std)
mean(training[,1])
mean(training[,2])
PCA_fit <- prcomp(training)
training_std <- PCA_fit$x[,1:10]
test_std <- predict(PCA_fit,test)[,1:10]
plot(training[,1],training[,3])
plot(training[,1],training[,2])
write.csv(cbind(training_std,training_label),'training.csv',row.names = FALSE)
write.csv(cbind(test_std,test_label),'test.csv',row.names = FALSE)
training_std <- apply(training_std,2,function(x) x/sum(x))
test_std <- apply(test_std,2,function(x) x/sum(x))
write.csv(cbind(training_std,training_label),'training.csv',row.names = FALSE)
write.csv(cbind(test_std,test_label),'test.csv',row.names = FALSE)
test_std <- predict(PCA_fit,test)[,1:3]
training_std <- PCA_fit$x[,1:3]
test_std <- predict(PCA_fit,test)[,1:3]
write.csv(cbind(training_std,training_label),'training.csv',row.names = FALSE)
write.csv(cbind(test_std,test_label),'test.csv',row.names = FALSE)
training_std <- PCA_fit$x[,1:50]
test_std <- predict(PCA_fit,test)[,1:50]
write.csv(cbind(training_std,training_label),'training.csv',row.names = FALSE)
write.csv(cbind(test_std,test_label),'test.csv',row.names = FALSE)
setwd("~/Documents/2015Fall/EE660/EE660_Project")
data <- read.csv("~/Documents/2015Fall/EE660/EE660_Project/diabetic_data.csv",
stringsAsFactors=T,na.strings = '?')
data <- data[,c(-6,-11)]
data$medical_specialty <- factor(data$medical_specialty,
levels=c(levels(data$medical_specialty),'Missing'))
data[,10][is.na(data$medical_specialty)] <- 'Missing'
data <- na.omit(data)
dim(data)
data <- data[order(data[,2]),]
unique_list <- array(TRUE,nrow(data))
for (l in 2:nrow(data)){
if (data[l,'patient_nbr']==data[l-1,'patient_nbr']){
unique_list[l]=FALSE
}
}
data <- subset(data,unique_list)
data <- data[,c(-1,-2)]
label <- data$readmitted
data <- data[,-46]
set.seed(12346)
set.seed(12345)
inTrain <- createDataPartition(label,p=0.8,list=FALSE)
training <- data[inTrain,]
training_label <- label[inTrain]
test <- data[-inTrain,]
test_label <- label[-inTrain]
par(cex=0.7,pin=c(4,3))
plot((training_label), xlab = 'Days to inpatient readmission', ylab = 'frequency',
col = 'red', main = 'Histogram of different classes')
set.seed(12358)
inTrain <- createDataPartition(label,p=0.8,list=FALSE)
training <- data[inTrain,]
training_label <- label[inTrain]
test <- data[-inTrain,]
test_label <- label[-inTrain]
par(cex=0.7,pin=c(4,3))
plot((training_label), xlab = 'Days to inpatient readmission', ylab = 'frequency',
col = 'red', main = 'Histogram of different classes')
NZV <- nearZeroVar(training,saveMetrics = T,freqCut=99/1)
View(NZV)
plot(training[,1],training[,2])
?plot
plot(training[,1],training[,2],type='p')
plot(training[,1:2],type='p')
plot(training[,1:2],type='lines')
View(training)
plot(training[,4],training[,5],type='p')
plot(training[,1],training_label)
hist(training_label,col = training[,1])
hist(training_label)
hist(as.numeric(training_label),col = training[,1])
NZV <- nearZeroVar(training,saveMetrics = T,freqCut=98/2)
training <- training[,-which(NZV$nzv==TRUE)]
test <- test[,-which(NZV$nzv==TRUE)]
View(training)
par(cex=0.7,pin=c(4,3))
plot((training_label), xlab = 'Days to inpatient readmission', ylab = 'frequency',
col = 'red', main = 'Histogram of different classes')
label
levels(label)<-c(1,1,0)
label
data <- read.csv("~/Documents/2015Fall/EE660/EE660_Project/diabetic_data.csv",
stringsAsFactors=T,na.strings = '?')
data <- data[,c(-6,-11)]
data$medical_specialty <- factor(data$medical_specialty,
levels=c(levels(data$medical_specialty),'Missing'))
data[,10][is.na(data$medical_specialty)] <- 'Missing'
data <- na.omit(data)
data <- data[order(data[,2]),]
unique_list <- array(TRUE,nrow(data))
for (l in 2:nrow(data)){
if (data[l,'patient_nbr']==data[l-1,'patient_nbr']){
unique_list[l]=FALSE
}
}
data <- subset(data,unique_list)
data <- data[,c(-1,-2)]
label <- data$readmitted
data <- data[,-46]
hist(as.numeric(label),col=training$age)
?ggplot
library(ggplot2)
ggplot(data = cbind(training,training_label), aes(x = age, y = training_label)) +
geom_bar(stat = 'identity') +
facet_grid(.~ supp) +
xlab('Dose (mg)') +
ylab('Tooth length') +
guides(fill = guide_legend(title = 'Supplement type'))
ggplot(data = cbind(training,training_label), aes(x = age, y = training_label)))
ggplot(data = cbind(training,training_label), aes(x = age, y = training_label)) +
geom_bar(stat = 'identity') +
facet_grid(.~ supp) +
xlab('Dose (mg)') +
ylab('Tooth length') +
guides(fill = guide_legend(title = 'Supplement type'))
levels(training$age) <- c(1,1,1,2,2,2,3,3,3)
levels(training$age) <- c(1,1,1,2,2,2,3,3,3,3)
levels(test$age) <- c(1,1,1,2,2,2,3,3,3,3)
View(training)
label
label_gen <- label
levels(lebel_gen) <- c(1,1,0)
lebel_gen
label_gen
levels(label_gen) <- c(1,1,0)
label_gen <- label
levels(label_gen) <- c('Readmission','Readmission','NO')
?par
training_label_gen <- label_gen[inTrain]
test_label_gen <- label_gen[-inTrain]
par(cex=0.7,pin=c(4,3),mfg=c(1,2))
par(cex=0.7,pin=c(4,3),mfrow=c(1,2))
plot((training_label), xlab = 'Days to inpatient readmission', ylab = 'frequency',
col = 'red', main = 'Histogram of different classes')
plot((training_label_gen), xlab = 'Readmission or not', ylab = 'frequency',
col = 'red', main = 'Histogram of different classes')
par(cex=0.7,mfrow=c(1,2))
plot((training_label), xlab = 'Days to inpatient readmission', ylab = 'frequency',
col = 'red', main = 'Histogram of different classes')
par(cex=0.7,pin=c(2,1),mfrow=c(1,2))
plot((training_label), xlab = 'Days to inpatient readmission', ylab = 'frequency',
col = 'red', main = 'Histogram of different classes')
plot((training_label_gen), xlab = 'Readmission or not', ylab = 'frequency',
col = 'red', main = 'Histogram of different classes')
```
par(cex=0.7,pin=c(4,3))
plot((training_label), xlab = 'Days to inpatient readmission', ylab = 'frequency',
col = 'red', main = 'Histogram of different classes')
par(cex=0.7,pin=c(4,3))
plot((training_label), xlab = 'Days to inpatient readmission', ylab = 'frequency',col = 'red', main = 'Histogram of different classes')
par(cex=0.7,pin=c(4,3))
plot((training_label_gen), xlab = 'Readmission or not', ylab = 'frequency',
col = 'red', main = 'Histogram of different classes')
plot((training_label), xlab = 'Days to inpatient readmission', ylab = 'frequency',col = 'red', main = 'Histogram of different classes')
par(cex=0.7,pin=c(4,3))
plot((training_label), xlab = 'Days to inpatient readmission', ylab = 'frequency',col = 'red', main = 'Histogram of different classes')
dev.off()
par(cex=0.7,pin=c(4,3))
plot((training_label), xlab = 'Days to inpatient readmission', ylab = 'frequency',col = 'red', main = 'Histogram of different classes')
par(cex=0.7,pin=c(4,3))
plot((training_label_gen), xlab = 'Readmission or not', ylab = 'frequency',
col = 'red', main = 'Histogram of different classes')
View(training)
training <- training[,c(-15,-16,-17)]
test <- test[,c(-15,-16,-17)]
View(training)
source('~/Documents/2015Fall/EE660/EE660_Project/C2N.R')
data <- rbind(training,test)
for (i in c(1:6,8,16:26)){
temp <- as.factor(data[,i])
data <- cbind(data,C2N(temp))
}
data <- data[,-c(1:6,8,16:26)]
training <- data[1:length(training_label),]
test <- data[(length(training_label)+1):68630,]
NZV_2 <- nearZeroVar(training,saveMetrics = T,freqCut=99/1)
training <- training[,-which(NZV_2$nzv==TRUE)]
test<- test[,-which(NZV_2$nzv==TRUE)]
write.csv(cbind(training,training_label),'training.csv',row.names = FALSE)
write.csv(cbind(test,test_label),'test.csv',row.names = FALSE)
training <- apply(training,2,as.numeric)
test <- apply(test,2,as.numeric) # workspace saved here
PCA_fit <- prcomp(training)
plot(PCA_fit,type='l')
training_std <- PCA_fit$x[,1:30]
test_std <- predict(PCA_fit,test)[,1:30]
write.csv(cbind(training_std,training_label),'training.csv',row.names = FALSE)
write.csv(cbind(test_std,test_label),'test.csv',row.names = FALSE)
data <- read.csv("~/Documents/2015Fall/EE660/EE660_Project/diabetic_data.csv",
stringsAsFactors=T,na.strings = '?')
data <- data[,c(-6,-11)]
data$medical_specialty <- factor(data$medical_specialty,
levels=c(levels(data$medical_specialty),'Missing'))
data[,10][is.na(data$medical_specialty)] <- 'Missing'
data <- na.omit(data)
dim(data)
data <- data[order(data[,2]),]
unique_list <- array(TRUE,nrow(data))
for (l in 2:nrow(data)){
if (data[l,'patient_nbr']==data[l-1,'patient_nbr']){
unique_list[l]=FALSE
}
}
data <- subset(data,unique_list)
data <- data[,c(-1,-2)]
label <- data$readmitted
label_gen <- label
levels(label_gen) <- c('Readmission','Readmission','NO')
data <- data[,-46]
set.seed(12345)
inTrain <- createDataPartition(label,p=0.8,list=FALSE)
training <- data[inTrain,]
training_label <- label[inTrain]
training_label_gen <- label_gen[inTrain]
test <- data[-inTrain,]
test_label <- label[-inTrain]
test_label_gen <- label_gen[-inTrain]
NZV <- nearZeroVar(training,saveMetrics = T,freqCut=95/5)
training <- training[,-which(NZV$nzv==TRUE)]
test <- test[,-which(NZV$nzv==TRUE)]
View(training)
levels(training$age) <- c(1,1,1,2,2,2,3,3,3,3)
levels(test$age) <- c(1,1,1,2,2,2,3,3,3,3)
training <- training[,c(-16,-17)]
test <- test[,c(-16,-17)]
View(training)
training <- training[,-c(17:25)]
test <- test[,-c(17:25)]
data <- rbind(training,test)
for (i in c(1:6,8,15)){
temp <- as.factor(data[,i])
data <- cbind(data,C2N(temp))
}
data <- data[,-c(1:6,8,15)]
training <- data[1:length(training_label),]
test <- data[(length(training_label)+1):68630,]
NZV_2 <- nearZeroVar(training,saveMetrics = T,freqCut=95/5)
training <- training[,-which(NZV_2$nzv==TRUE)]
test<- test[,-which(NZV_2$nzv==TRUE)]
training <- apply(training,2,as.numeric)
test <- apply(test,2,as.numeric) # workspace saved here
write.csv(cbind(training,training_label),'training.csv',row.names = FALSE)
write.csv(cbind(test,test_label),'test.csv',row.names = FALSE)
PCA_fit <- prcomp(training)
plot(PCA_fit,type='l')
dev.off()
plot(PCA_fit,type='l')
training_std <- PCA_fit$x[,1:3]
test_std <- predict(PCA_fit,test)[,1:3]
write.csv(cbind(training_std,training_label),'training.csv',row.names = FALSE)
write.csv(cbind(test_std,test_label),'test.csv',row.names = FALSE)
View(training)
View(training_std)
write.csv(cbind(training_std,training_label_gen),'training.csv',row.names = FALSE)
write.csv(cbind(test_std,test_label_gen),'test.csv',row.names = FALSE)
View(training)
write.csv(cbind(training,training_label_gen),'training.csv',row.names = FALSE)
write.csv(cbind(test,test_label_gen),'test.csv',row.names = FALSE)
data <- read.csv("~/Documents/2015Fall/EE660/EE660_Project/diabetic_data.csv",
stringsAsFactors=T,na.strings = '?')
data <- data[,c(-6,-11)]
data$medical_specialty <- factor(data$medical_specialty,
levels=c(levels(data$medical_specialty),'Missing'))
data[,10][is.na(data$medical_specialty)] <- 'Missing'
data <- na.omit(data)
data <- data[order(data[,2]),]
unique_list <- array(TRUE,nrow(data))
for (l in 2:nrow(data)){
if (data[l,'patient_nbr']==data[l-1,'patient_nbr']){
unique_list[l]=FALSE
}
}
data <- subset(data,unique_list)
data <- data[,c(-1,-2)]
label <- data$readmitted
label_gen <- label
levels(label_gen) <- c('Readmission','Readmission','NO')
data <- data[,-46]
set.seed(12345)
inTrain <- createDataPartition(label,p=0.8,list=FALSE)
training <- data[inTrain,]
training_label <- label[inTrain]
training_label_gen <- label_gen[inTrain]
test <- data[-inTrain,]
test_label <- label[-inTrain]
test_label_gen <- label_gen[-inTrain]
NZV <- nearZeroVar(training,saveMetrics = T,freqCut=95/5)
training <- training[,-which(NZV$nzv==TRUE)]
test <- test[,-which(NZV$nzv==TRUE)]
training <- training[,c(-16,-17)]
test <- test[,c(-16,-17)]
training <- training[,-c(17:25)]
test <- test[,-c(17:25)]
data <- rbind(training,test)
for (i in c(1:6,8,15)){
temp <- as.factor(data[,i])
data <- cbind(data,C2N(temp))
View(data)
View(data)
for (i in c(1:6,8,15)){
temp <- as.factor(data[,i])
data <- cbind(data,C2N(temp))
}
data <- data[,-c(1:6,8,15)]
training <- data[1:length(training_label),]
test <- data[(length(training_label)+1):68630,]
NZV_2 <- nearZeroVar(training,saveMetrics = T,freqCut=95/5)
training <- training[,-which(NZV_2$nzv==TRUE)]
test<- test[,-which(NZV_2$nzv==TRUE)]
training <- apply(training,2,as.numeric)
test <- apply(test,2,as.numeric) # workspace saved here
View(training)
length(training)
View(training)
dim(training)
training_std <- apply(training,2,function(x) log(x+1))
test_std <- apply(test,2,function(x) log(x+1))
View(training_std)
write.csv(cbind(training_std,training_label_gen),'training.csv',row.names = FALSE)
write.csv(cbind(test_std,test_label_gen),'test.csv',row.names = FALSE)
training_std <- apply(training,2,function(x) (x-mean(x))/sd(x))
test_std <- apply(test,2,function(x) (x-mean(x))/sd(x))
write.csv(cbind(training_std,training_label_gen),'training.csv',row.names = FALSE)
write.csv(cbind(test_std,test_label_gen),'test.csv',row.names = FALSE)
write.csv(cbind(training_std,training_label),'training.csv',row.names = FALSE)
write.csv(cbind(test_std,test_label),'test.csv',row.names = FALSE)
data <- read.csv("~/Documents/2015Fall/EE660/EE660_Project/diabetic_data.csv",
stringsAsFactors=T,na.strings = '?')
data <- data[,c(-6,-11)]
data$medical_specialty <- factor(data$medical_specialty,
levels=c(levels(data$medical_specialty),'Missing'))
data[,10][is.na(data$medical_specialty)] <- 'Missing'
data <- na.omit(data)
data <- data[order(data[,2]),]
unique_list <- array(TRUE,nrow(data))
for (l in 2:nrow(data)){
if (data[l,'patient_nbr']==data[l-1,'patient_nbr']){
unique_list[l]=FALSE
}
}
data <- subset(data,unique_list)
data <- data[,c(-1,-2)]
label <- data$readmitted
label_gen <- label
levels(label_gen) <- c('Readmission','Readmission','NO')
data <- data[,-46]
set.seed(12345)
inTrain <- createDataPartition(label,p=0.8,list=FALSE)
training <- data[inTrain,]
training_label <- label[inTrain]
training_label_gen <- label_gen[inTrain]
test <- data[-inTrain,]
test_label <- label[-inTrain]
test_label_gen <- label_gen[-inTrain]
par(cex=0.7,pin=c(4,3))
plot((training_label), xlab = 'Days to inpatient readmission', ylab = 'frequency',col = 'red', main = 'Histogram of different classes')
par(cex=0.7,pin=c(4,3))
plot((test_label), xlab = 'Days to inpatient readmission', ylab = 'frequency',col = 'red', main = 'Histogram of different classes')
par(cex=0.7,pin=c(4,3))
plot((training_label), xlab = 'Days to inpatient readmission', ylab = 'frequency',col = 'red', main = 'Histogram of different classes')
par(cex=0.7,pin=c(4,3))
data <- read.csv("~/Documents/2015Fall/EE660/EE660_Project/diabetic_data.csv",
stringsAsFactors=T,na.strings = '?')
data <- data[,c(-6,-11)]
data$medical_specialty <- factor(data$medical_specialty,
levels=c(levels(data$medical_specialty),'Missing'))
data[,10][is.na(data$medical_specialty)] <- 'Missing'
data <- na.omit(data)
data <- data[order(data[,2]),]
unique_list <- array(TRUE,nrow(data))
for (l in 2:nrow(data)){
if (data[l,'patient_nbr']==data[l-1,'patient_nbr']){
unique_list[l]=FALSE
}
}
data <- subset(data,unique_list)
data <- data[,c(-1,-2)]
label <- data$readmitted
label_gen <- label
levels(label_gen) <- c('Readmission','Readmission','NO')
set.seed(12345)
inTrain <- createDataPartition(label,p=0.8,list=FALSE)
training <- data[inTrain,]
training_label <- label[inTrain]
training_label_gen <- label_gen[inTrain]
test <- data[-inTrain,]
test_label <- label[-inTrain]
test_label_gen <- label_gen[-inTrain]
```
data.frame(Process=c(1:6),Discription=c(1:6))
library(pander)
library(pander)
library(caret)
library(randomForest)
library(pander)
library(psych)
library(FactoMineR)
library(ggplot2)
data <- read.csv("~/Documents/2015Fall/EE660/EE660_Project/diabetic_data.csv",
stringsAsFactors=T,na.strings = '?')
dim(data)
View(data)
View(data)
getwd()
IDs_mapping <- read.csv("~/Documents/2015Fall/EE660/EE660_Project/IDs_mapping.csv", stringsAsFactors=FALSE)
View(IDs_mapping)
View(IDs_mapping)
ati <- IDs_mapping[c(1:8),]
ddi <- IDs_mapping[c(10:40),]
names(ddi) <- c('discharge_disposition_id','description')
asi <- IDs_mapping[c(42:67),]
names(asi) <- c('admission_source_id','description')
write.csv(asi,'asi.csv',rom.names=FALSE)
write.csv(asi,'asi.csv',row.names=FALSE)
write.csv(ati,'ati.csv',row.names=FALSE)
write.csv(ddi,'ddi.csv',row.names=FALSE)
ati <- read.csv("~/Documents/2015Fall/EE660/EE660_Project/ati.csv", stringsAsFactors=FALSE)
View(ati)
as.numeric(training)
View(training)
View(asi)
